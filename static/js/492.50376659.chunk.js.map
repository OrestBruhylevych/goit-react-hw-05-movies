{"version":3,"file":"static/js/492.50376659.chunk.js","mappings":"qPAKMA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iPAeHE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACL,EAAD,CAAYI,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,M,oBCtBME,EAAkBN,EAAAA,GAAAA,IAAH,oOCEb,SAASO,EAAT,GAQX,IAPFC,EAOC,EAPDA,GACAC,EAMC,EANDA,IACAC,EAKC,EALDA,MACAC,EAIC,EAJDA,OACAC,EAGC,EAHDA,SACAC,EAEC,EAFDA,aACAC,EACC,EADDA,KAEA,OACE,UAACR,EAAD,CAAiBE,GAAIA,EAArB,WACE,gBAAKO,IAAG,yCAAoCN,GAAOO,IAAI,kBACvD,UAACC,EAAA,EAAD,CAAKC,EAAG,EAAR,WACE,0BACGR,EADH,KACYI,EADZ,QAGA,wCAAgBD,EAAhB,OAECD,IACC,iCACE,sCACA,uBAAIA,OAGPD,IACC,iCACE,oCACA,uBAAIA,EAAOQ,KAAI,SAAAC,GAAK,gBAAOA,EAAMC,KAAb,mB,4CCpBjB,SAASC,IAAgB,IAAD,IAC7BC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAQ7C,IANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBX,GAASY,MAAK,SAAAC,GAC5BT,EAASS,QAEV,CAACb,IAECG,EAAL,CAIA,IACElB,EAOEkB,EAPFlB,GACA6B,EAMEX,EANFW,cACA3B,EAKEgB,EALFhB,MACAC,EAIEe,EAJFf,OACAC,EAGEc,EAHFd,SACAC,EAEEa,EAFFb,aACAyB,EACEZ,EADFY,aAGF,OACE,UAAC,IAAD,YACE,SAACpC,EAAD,CAAUC,GAAI2B,EAAd,mBAEA,SAACvB,EAAD,CACEC,GAAIA,EACJC,IAAK4B,EACL3B,MAAOA,EACPC,OAAQA,EACRC,SAAUA,EACVC,aAAcA,EACdC,KAAMwB,KAGR,UAACrB,EAAA,EAAD,CAAKC,EAAG,EAAGqB,OAAO,kBAAlB,WACE,mDACA,UAACtB,EAAA,EAAD,CAAKuB,GAAG,KAAKC,QAAQ,OAAOC,GAAG,OAA/B,WACE,yBACE,SAAC,IAAD,CAAYvC,GAAG,OAAO4B,MAAO,CAAEC,KAAMJ,EAASG,MAAMC,MAApD,qBAIF,yBACE,SAAC,IAAD,CAAY7B,GAAG,UAAU4B,MAAO,CAAEC,KAAMJ,EAASG,MAAMC,MAAvD,8BAON,SAAC,EAAAW,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD","sources":["components/BackLink/BackLink.jsx","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  to: PropTypes.object.isRequired,\n  children: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const MovieCardStyled = styled.div`\n  padding: 10px;\n  border: 1px solid black;\n  margin-bottom: 20px;\n\n  display: flex;\n\n  img {\n    width: 340px;\n  }\n\n  h1 {\n    margin-bottom: 10px;\n  }\n  p {\n    margin-bottom: 10px;\n  }\n`;\n","import { Box } from 'components/Box/Box';\nimport { MovieCardStyled } from './MovieCard.styled';\nimport PropTypes from 'prop-types';\n\nexport default function MovieCard({\n  id,\n  url,\n  title,\n  genres,\n  overview,\n  vote_average,\n  date,\n}) {\n  return (\n    <MovieCardStyled id={id}>\n      <img src={`https://image.tmdb.org/t/p/w500${url}`} alt=\"Poster movie\" />\n      <Box p={4}>\n        <h1>\n          {title} ({date})\n        </h1>\n        <p>User Score: {vote_average} </p>\n\n        {overview && (\n          <>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n          </>\n        )}\n        {genres && (\n          <>\n            <h2>Genres</h2>\n            <p>{genres.map(genre => `${genre.name} `)}</p>\n          </>\n        )}\n      </Box>\n    </MovieCardStyled>\n  );\n}\n\nMovieCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  url: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  genres: PropTypes.array.isRequired,\n  overview: PropTypes.string.isRequired,\n  vote_average: PropTypes.number.isRequired,\n  date: PropTypes.string.isRequired,\n};\n","import { BackLink } from 'components/BackLink/BackLink';\nimport { Box } from 'components/Box/Box';\nimport { Conteiner } from 'components/GlobalStyle';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport { StyledLink } from 'components/PagesNavigation/PagesNavigation.styled';\nimport { Suspense, useState } from 'react';\nimport { useEffect } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport { getMovieDetails } from '../services/api';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(res => {\n      setMovie(res);\n    });\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  const {\n    id,\n    backdrop_path,\n    title,\n    genres,\n    overview,\n    vote_average,\n    release_date,\n  } = movie;\n\n  return (\n    <Conteiner>\n      <BackLink to={backLinkHref}>Back</BackLink>\n\n      <MovieCard\n        id={id}\n        url={backdrop_path}\n        title={title}\n        genres={genres}\n        overview={overview}\n        vote_average={vote_average}\n        date={release_date}\n      />\n\n      <Box p={4} border=\"1px solid black\">\n        <p>Additional information</p>\n        <Box as=\"ul\" display=\"flex\" mt=\"10px\">\n          <li>\n            <StyledLink to=\"cast\" state={{ from: location.state.from }}>\n              Cast\n            </StyledLink>\n          </li>\n          <li>\n            <StyledLink to=\"reviews\" state={{ from: location.state.from }}>\n              Reviews\n            </StyledLink>\n          </li>\n        </Box>\n      </Box>\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </Conteiner>\n  );\n}\n"],"names":["StyledLink","styled","Link","BackLink","to","children","size","MovieCardStyled","MovieCard","id","url","title","genres","overview","vote_average","date","src","alt","Box","p","map","genre","name","MovieDetails","movieId","useParams","useState","movie","setMovie","location","useLocation","backLinkHref","state","from","useEffect","getMovieDetails","then","res","backdrop_path","release_date","border","as","display","mt","Suspense","fallback"],"sourceRoot":""}